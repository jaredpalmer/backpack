#! /usr/bin/env node
const webpack = require('webpack')
const defaultConfig = require('../config/webpack.config')
const path = require('path')
const fs = require('fs')

process.on('SIGINT', process.exit)

const options = {
  env: 'production'
}

const configPath = path.resolve('backpack.config.js')
let userConfig = {}

if (fs.existsSync(configPath)) {
  const userConfigModule = require(configPath)
  userConfig = userConfigModule.default || userConfigModule
}

const fullConfig = userConfig.webpack
      ? userConfig.webpack(defaultConfig(options), options)
      : defaultConfig(options)

const serverConfig = Array.isArray(fullConfig)
      ? fullConfig.filter(({target} = {}) => { target === 'node' })[0]
      : serverConfig;

process.on('SIGINT', process.exit)

const serverCompiler = webpack(fullConfig)
const compileServer = () => serverCompiler.run(() => undefined)

compileServer()
